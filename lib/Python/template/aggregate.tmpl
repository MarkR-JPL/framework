#!/usr/bin/env bash
{0.variable_exports}
sounding_id_list_filename={0.sounding_id_list_filename}
l2_agg_fn={0.processing_dir}/l2_aggregate.h5
l2_plus_more_agg_fn={0.processing_dir}/l2_plus_more_aggregate.h5

export PYTHONPATH={0.python_path}
export PATH={0.bin_path}
export LD_LIBRARY_PATH={0.lib_path}
export LUA_PATH="{0.l2_lua_path}"

# Make a version of the sounding id file with newlines instead of spaces
# for use by splice tool
snd_id_tmp=$(mktemp)
cat $sounding_id_list_filename | tr ' ' '\n' > $snd_id_tmp

# Aggregate all single sounding output hdf files into a single hdf file
if [ ! -e "$l2_agg_fn" ]; then
    input_files_tmp=$(mktemp)
    find {0.output_directory} -name "*.h5" > $input_files_tmp

    echo "Aggregating L2 output files"
    {0.l2_support_path}/utils/splice_acos_hdf_files.py -o $l2_agg_fn -i $input_files_tmp -s $snd_id_tmp $*
    rm $input_files_tmp
else
    echo "L2 aggregated file exists, skipping creation"
fi

if [ ! -e "$l2_plus_more_agg_fn" ]; then
    echo "Creating L2 plus L1B aggregated file"

    # Combine L1B and L2 files into one file
    # with IMAP and ABand files if they are supplied
    echo "Combining L2 and L1B into a single file"
    {0.l2_support_path}/utils/splice_acos_hdf_files.py --splice-all --rename_mapping --agg_names_filter -o $l2_plus_more_agg_fn $l2_agg_fn $spectrum_file $imap_file $aband_file -s $snd_id_tmp

    # Create retrieval_index dataset based on L1B file
    echo "Adding retrieval information datasets"
    {0.l2_support_path}/utils/add_spliced_retrieval_info.py $spectrum_file $l2_plus_more_agg_fn
else
    echo "L2 plus L1B file exists, skipping creation"
fi

rm -f $snd_id_tmp
